//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReceptionProcam.EntityModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBNCSVisitorEntities : DbContext
    {
        public DBNCSVisitorEntities()
            : base("name=DBNCSVisitorEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblAssetCompany> tblAssetCompanies { get; set; }
        public virtual DbSet<tblAssetDetail> tblAssetDetails { get; set; }
        public virtual DbSet<tblAssetIssueDetail> tblAssetIssueDetails { get; set; }
        public virtual DbSet<tblAssetType> tblAssetTypes { get; set; }
        public virtual DbSet<tblEmpDesignationMaster> tblEmpDesignationMasters { get; set; }
        public virtual DbSet<tblEmployeeDetail> tblEmployeeDetails { get; set; }
        public virtual DbSet<tblGateMaster> tblGateMasters { get; set; }
        public virtual DbSet<tblIdentityMaster> tblIdentityMasters { get; set; }
        public virtual DbSet<tblPurposeMaster> tblPurposeMasters { get; set; }
        public virtual DbSet<tblUserLogin> tblUserLogins { get; set; }
        public virtual DbSet<tblVisitor> tblVisitors { get; set; }
        public virtual DbSet<tblVisitorPersonalData> tblVisitorPersonalDatas { get; set; }
        public virtual DbSet<tblVisitorVisitDetail> tblVisitorVisitDetails { get; set; }
    
        public virtual int spInsertAssetIssueDetails(Nullable<int> empId, Nullable<int> assetId, string createdBy)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var assetIdParameter = assetId.HasValue ?
                new ObjectParameter("AssetId", assetId) :
                new ObjectParameter("AssetId", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertAssetIssueDetails", empIdParameter, assetIdParameter, createdByParameter);
        }
    
        public virtual ObjectResult<uspGetAllActiveAssets_Result> uspGetAllActiveAssets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAllActiveAssets_Result>("uspGetAllActiveAssets");
        }
    
        public virtual ObjectResult<uspGetAllGate_Result> uspGetAllGate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAllGate_Result>("uspGetAllGate");
        }
    
        public virtual ObjectResult<uspGetAllIdentity_Result> uspGetAllIdentity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAllIdentity_Result>("uspGetAllIdentity");
        }
    
        public virtual ObjectResult<uspGetAllPurpose_Result> uspGetAllPurpose()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAllPurpose_Result>("uspGetAllPurpose");
        }
    
        public virtual ObjectResult<uspGetAssetDetails_Result> uspGetAssetDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAssetDetails_Result>("uspGetAssetDetails");
        }
    
        public virtual ObjectResult<uspGetAssetList_Result> uspGetAssetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAssetList_Result>("uspGetAssetList");
        }
    
        public virtual ObjectResult<uspGetEmployeeList_Result> uspGetEmployeeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetEmployeeList_Result>("uspGetEmployeeList");
        }
    
        public virtual ObjectResult<uspGetVisitorDetails_Result> uspGetVisitorDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetVisitorDetails_Result>("uspGetVisitorDetails");
        }
    
        public virtual ObjectResult<uspGetVisitorDetailsByGovId_Result> uspGetVisitorDetailsByGovId(string visType, string govId)
        {
            var visTypeParameter = visType != null ?
                new ObjectParameter("VisType", visType) :
                new ObjectParameter("VisType", typeof(string));
    
            var govIdParameter = govId != null ?
                new ObjectParameter("GovId", govId) :
                new ObjectParameter("GovId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetVisitorDetailsByGovId_Result>("uspGetVisitorDetailsByGovId", visTypeParameter, govIdParameter);
        }
    
        public virtual ObjectResult<uspGetVisitorDetailsById_Result> uspGetVisitorDetailsById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetVisitorDetailsById_Result>("uspGetVisitorDetailsById", idParameter);
        }
    
        public virtual ObjectResult<uspGetVisitorDetailsNew_Result> uspGetVisitorDetailsNew()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetVisitorDetailsNew_Result>("uspGetVisitorDetailsNew");
        }
    
        public virtual ObjectResult<uspGetVisitorPerDayCount_Result> uspGetVisitorPerDayCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetVisitorPerDayCount_Result>("uspGetVisitorPerDayCount");
        }
    
        public virtual int uspInsertVisitorDetails(string empId, string govIdNo, string name, string dOB, string mobileNo, string emailId, string govId, string imagePath, string visitorId, string assetId, string location, string toMeet, string subLocation, string officeLocation, string gate, string purpose, string timeIn, string validUpto, string remark, string createdBy, string createdDate, ObjectParameter id)
        {
            var empIdParameter = empId != null ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(string));
    
            var govIdNoParameter = govIdNo != null ?
                new ObjectParameter("GovIdNo", govIdNo) :
                new ObjectParameter("GovIdNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var govIdParameter = govId != null ?
                new ObjectParameter("GovId", govId) :
                new ObjectParameter("GovId", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var visitorIdParameter = visitorId != null ?
                new ObjectParameter("VisitorId", visitorId) :
                new ObjectParameter("VisitorId", typeof(string));
    
            var assetIdParameter = assetId != null ?
                new ObjectParameter("AssetId", assetId) :
                new ObjectParameter("AssetId", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var toMeetParameter = toMeet != null ?
                new ObjectParameter("ToMeet", toMeet) :
                new ObjectParameter("ToMeet", typeof(string));
    
            var subLocationParameter = subLocation != null ?
                new ObjectParameter("SubLocation", subLocation) :
                new ObjectParameter("SubLocation", typeof(string));
    
            var officeLocationParameter = officeLocation != null ?
                new ObjectParameter("OfficeLocation", officeLocation) :
                new ObjectParameter("OfficeLocation", typeof(string));
    
            var gateParameter = gate != null ?
                new ObjectParameter("Gate", gate) :
                new ObjectParameter("Gate", typeof(string));
    
            var purposeParameter = purpose != null ?
                new ObjectParameter("Purpose", purpose) :
                new ObjectParameter("Purpose", typeof(string));
    
            var timeInParameter = timeIn != null ?
                new ObjectParameter("TimeIn", timeIn) :
                new ObjectParameter("TimeIn", typeof(string));
    
            var validUptoParameter = validUpto != null ?
                new ObjectParameter("ValidUpto", validUpto) :
                new ObjectParameter("ValidUpto", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspInsertVisitorDetails", empIdParameter, govIdNoParameter, nameParameter, dOBParameter, mobileNoParameter, emailIdParameter, govIdParameter, imagePathParameter, visitorIdParameter, assetIdParameter, locationParameter, toMeetParameter, subLocationParameter, officeLocationParameter, gateParameter, purposeParameter, timeInParameter, validUptoParameter, remarkParameter, createdByParameter, createdDateParameter, id);
        }
    
        public virtual int uspUpdatePersonalandVisitorData(string empId, string govIdNo, string name, string dOB, string mobileNo, string emailId, string govId, string imagePath, Nullable<int> id, string visitorId, string assetId, string location, string toMeet, string subLocation, string officeLocation, string gate, string purpose, string timeIn, string validUpto, string remark, string createdBy, string createdDate)
        {
            var empIdParameter = empId != null ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(string));
    
            var govIdNoParameter = govIdNo != null ?
                new ObjectParameter("GovIdNo", govIdNo) :
                new ObjectParameter("GovIdNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var govIdParameter = govId != null ?
                new ObjectParameter("GovId", govId) :
                new ObjectParameter("GovId", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var visitorIdParameter = visitorId != null ?
                new ObjectParameter("VisitorId", visitorId) :
                new ObjectParameter("VisitorId", typeof(string));
    
            var assetIdParameter = assetId != null ?
                new ObjectParameter("AssetId", assetId) :
                new ObjectParameter("AssetId", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var toMeetParameter = toMeet != null ?
                new ObjectParameter("ToMeet", toMeet) :
                new ObjectParameter("ToMeet", typeof(string));
    
            var subLocationParameter = subLocation != null ?
                new ObjectParameter("SubLocation", subLocation) :
                new ObjectParameter("SubLocation", typeof(string));
    
            var officeLocationParameter = officeLocation != null ?
                new ObjectParameter("OfficeLocation", officeLocation) :
                new ObjectParameter("OfficeLocation", typeof(string));
    
            var gateParameter = gate != null ?
                new ObjectParameter("Gate", gate) :
                new ObjectParameter("Gate", typeof(string));
    
            var purposeParameter = purpose != null ?
                new ObjectParameter("Purpose", purpose) :
                new ObjectParameter("Purpose", typeof(string));
    
            var timeInParameter = timeIn != null ?
                new ObjectParameter("TimeIn", timeIn) :
                new ObjectParameter("TimeIn", typeof(string));
    
            var validUptoParameter = validUpto != null ?
                new ObjectParameter("ValidUpto", validUpto) :
                new ObjectParameter("ValidUpto", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdatePersonalandVisitorData", empIdParameter, govIdNoParameter, nameParameter, dOBParameter, mobileNoParameter, emailIdParameter, govIdParameter, imagePathParameter, idParameter, visitorIdParameter, assetIdParameter, locationParameter, toMeetParameter, subLocationParameter, officeLocationParameter, gateParameter, purposeParameter, timeInParameter, validUptoParameter, remarkParameter, createdByParameter, createdDateParameter);
        }
    }
}
