@model ReceptionProcam.Areas.Area.Models.PurposeMasters
@{
    ViewBag.Title = "PurposeMaster";
    Layout = "~/Areas/Area/Views/Shared/_Layout.cshtml";
}
@if (TempData["Success"] != null)
{
    <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>
}
@using (Html.BeginForm(new { @class = "m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="m-portlet">
        <div class="m-portlet__head">
            <div class="m-portlet__head-caption">
                <div class="m-portlet__head-title">
                    <span class="m-portlet__head-icon m--hide">
                        <i class="la la-gear"></i>
                    </span>
                    <h3 class="m-portlet__head-text">
                        Purpose Master
                    </h3>
                </div>

            </div>
        </div>
        <div class="m-portlet__body">

            <div class="form-group m-form__group row">

                <div class="col-lg-6">
                    @Html.LabelFor(model => model.PurposeName, htmlAttributes: new { })<span class="text-danger">*</span>
                    @Html.EditorFor(model => model.PurposeName, new { htmlAttributes = new { autocomplete = "off", @class = "form-control m-input", @placeholder = "Purpose Name", @style = "text-transform:uppercase" } })
                    <p class="help-block">@Html.ValidationMessageFor(m => m.PurposeName, "", new { @class = "text-danger" })</p>
                </div>
            </div>
            <div class="form-group m-form__group row">
                <div class="col-lg-6">
                    @Html.LabelFor(model => model.PurposeCode, htmlAttributes: new { })<span class="text-danger">*</span>
                    @Html.EditorFor(model => model.PurposeCode, new { htmlAttributes = new { autocomplete = "off", maxlength = 3, @class = "form-control m-input", @placeholder = "Purpose Code" } })
                    <p class="help-block">@Html.ValidationMessageFor(m => m.PurposeCode, "", new { @class = "text-danger" })</p>
                </div>
            </div>


        </div>
        <div class="m-portlet__foot m-portlet__no-border m-portlet__foot--fit">
            <div class="m-form__actions m-form__actions--solid">
                <div class="row">
                    <div class="col-lg-4"></div>
                    <div class="col-lg-8">
                        <button type="submit" class="btn btn-primary" id="SubmitBtn">
                            Submit
                        </button>
                        <button type="reset" class="btn btn-secondary" onclick="@("window.location.href='" + @Url.Action("PurposeList", "PurposeMaster") + "'");">
                            Cancel
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <br />
    </div>
}